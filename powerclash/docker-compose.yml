version: '3.8'

services:
  # MongoDB - Banco de dados principal
  mongodb:
    image: mongo:7.0
    container_name: powerclash-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: powerclash123
      MONGO_INITDB_DATABASE: powerclash
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - powerclash-network

  # Redis - Cache e sessões
  redis:
    image: redis:7.2-alpine
    container_name: powerclash-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - powerclash-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: powerclash-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:powerclash123@mongodb:27017/powerclash?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret-key-change-in-production
      PORT: 3001
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - powerclash-network
    command: npm run dev

  # Frontend Web Panel
  frontend:
    build:
      context: ./web-panel
      dockerfile: Dockerfile.dev
    container_name: powerclash-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_WS_URL: ws://localhost:3001
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./web-panel:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - powerclash-network
    command: npm start

  # Nginx - Proxy reverso para produção
  nginx:
    image: nginx:alpine
    container_name: powerclash-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - powerclash-network
    profiles:
      - production

  # Elasticsearch - Logs e análise
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: powerclash-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - powerclash-network
    profiles:
      - production

  # Kibana - Visualização de logs
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: powerclash-kibana
    restart: unless-stopped
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - powerclash-network
    profiles:
      - production

  # Prometheus - Métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: powerclash-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - powerclash-network
    profiles:
      - production

  # Grafana - Dashboard de métricas
  grafana:
    image: grafana/grafana:latest
    container_name: powerclash-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - powerclash-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  powerclash-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16